{"version":3,"sources":["action/action_constant/action_constant.js","App.js","reducer/postReducer.js","reducer/index.js","index.js","store/configureStore.js"],"names":["GET_POST_LIST","JobList","React","lazy","EditJob","AddJob","App","window","scrollTo","Suspense","fallback","className","type","color","height","width","exact","path","name","render","props","Component","initialState","rootReducer","combineReducers","post","state","action","getPostDetails","Payload","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"qGAAA,kCAAO,IAAMA,EAAgB,iB,0OCevBC,G,MAAUC,IAAMC,MAAK,kBACzB,+DAEIC,EAAUF,IAAMC,MAAK,kBACzB,8DAEIE,EAASH,IAAMC,MAAK,kBACxB,8DAuCaG,E,kLAlCXC,OAAOC,SAAS,EAAG,K,+BAInB,OACE,kBAAC,IAAMC,SAAP,CAAgBC,SA1BpB,yBAAKC,UAAU,kBACb,kBAAC,IAAD,CACEC,KAAK,YACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,QAsBL,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,KAAK,cACLC,OAAQ,SAAAC,GAAK,OAAI,kBAACnB,EAAYmB,MAEhC,kBAAC,IAAD,CACEJ,OAAK,EACLC,KAAK,gBACLC,KAAK,WACLC,OAAQ,SAAAC,GAAK,OAAI,kBAAChB,EAAYgB,MAEhC,kBAAC,IAAD,CACEJ,OAAK,EACLC,KAAK,WACLC,KAAK,UACLC,OAAQ,SAAAC,GAAK,OAAI,kBAACf,EAAWe,a,GA3BzBC,a,+BCvBZC,EAAe,GCCrB,IAGeC,EAHKC,YAAgB,CAClCC,KDDa,WAAoD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAEhE,OAAQA,EAAOf,MACb,KAAKZ,IACH,MAAO,CACL4B,eAAgBD,EAAOE,SAG3B,QACE,OAAO,eAAKH,O,QEFlB,ICNuCJ,EDMjCQ,ECLGC,YAAYR,EAAaD,EAAcU,YAAgBC,MDMhEC,IAASf,OACP,kBAAC,IAAMgB,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINM,SAASC,eAAe,W","file":"static/js/main.a2425e4d.chunk.js","sourcesContent":["export const GET_POST_LIST = \"GET_POST_LIST\";\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Loader from 'react-loader-spinner';\nimport './App.css';\n\nconst loading = () => (\n  <div className=\"user-db-loader\">\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n    />\n  </div>\n);\nconst JobList = React.lazy(() =>\n  import(\"./component/List_Job/listJob\")\n);\nconst EditJob = React.lazy(() =>\n  import(\"./component/Edit_Job/editJob\")\n);\nconst AddJob = React.lazy(() =>\n  import(\"./component/Add_Job/addJob\")\n);\nclass App extends Component {\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return (\n      <React.Suspense fallback={loading()}>\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              name=\"Get Listing\"\n              render={props => <JobList {...props} />}\n            />\n            <Route\n              exact\n              path=\"/edit-job/:id\"\n              name=\"Edit Job\"\n              render={props => <EditJob {...props} />}\n            />\n            <Route\n              exact\n              path=\"/add-job\"\n              name=\"Add Job\"\n              render={props => <AddJob {...props} />}\n            />\n          </Switch>\n        </BrowserRouter>\n      </React.Suspense>\n\n    );\n  }\n}\n\nexport default App;\n\n\n","import { GET_POST_LIST } from \"../action/action_constant/action_constant\";\r\nconst initialState = [];\r\nexport default function postReducer(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case GET_POST_LIST:\r\n      return {\r\n        getPostDetails: action.Payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport postReducer from \"./postReducer\";\r\nconst rootReducer = combineReducers({\r\n  post: postReducer,\r\n});\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport configStore from \"./store/configureStore\";\n\nconst store = configStore();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducer\";\r\nimport thunk from \"redux-thunk\";\r\nexport default function configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}\r\n"],"sourceRoot":""}