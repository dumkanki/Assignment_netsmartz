{"version":3,"sources":["component/Edit_Job/editJob.js","action/action.js","config/config.js"],"names":["EditJob","props","loading","className","handleSubmit","a","data","id","match","params","jobTitle","editJobForm","value","jobLocation","jobDescription","date","status","dispatch","editJobPost","history","FormBuilder","group","Validators","required","this","getJobDataToUpdate","jobDetais","patchValue","style","marginLeft","cursor","control","render","get","invalid","onSubmit","name","handler","touched","hasError","for","type","color","disabled","to","Component","connect","state","ownProps","getPostDetails","post","getJobList","GET_POST_LIST","Payload","getPostListing","axios","url","then","res","toastr","error","msg","catch","err","addJob","success","push","pathname","deleteJobList","module","exports"],"mappings":"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","file":"static/js/7.b6603ef4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    FormBuilder,\r\n    FieldGroup,\r\n    FieldControl,\r\n    Validators\r\n} from \"react-reactive-form\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n    getJobDataToUpdate, editJobPost\r\n} from \"../../action/action\";\r\nclass EditJob extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.editJobForm = FormBuilder.group({\r\n            jobTitle: [\"\", [Validators.required]],\r\n            jobLocation: [\"\", [Validators.required]],\r\n            jobDescription: [\"\", [Validators.required]],\r\n            date: [\"\", [Validators.required]],\r\n            status: [\"\", [Validators.required]],\r\n        });\r\n    }\r\n\r\n    async  componentDidMount() {\r\n        let jobDetais = await this.props.dispatch(getJobDataToUpdate(this.props.match.params.id));\r\n        this.editJobForm.patchValue({\r\n            jobTitle: jobDetais.jobTitle,\r\n            jobLocation: jobDetais.jobLocation,\r\n            jobDescription: jobDetais.jobDescription,\r\n            status: jobDetais.status,\r\n            date: jobDetais.date\r\n        })\r\n    }\r\n\r\n    loading = () => (\r\n        <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n    );\r\n\r\n    handleSubmit = async () => {\r\n        var data = {\r\n            id: this.props.match.params.id,\r\n            jobTitle: this.editJobForm.value.jobTitle,\r\n            jobLocation: this.editJobForm.value.jobLocation,\r\n            jobDescription: this.editJobForm.value.jobDescription,\r\n            date: this.editJobForm.value.date,\r\n            status: this.editJobForm.value.status,\r\n        }\r\n        await this.props.dispatch(editJobPost(data, this.props.history));\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2>Edit Job Details<span style={{ marginLeft: \"60%\", cursor: \"pointer\" }}></span></h2>\r\n                </div>\r\n                <FieldGroup\r\n                    control={this.editJobForm}\r\n                    render={({ get, invalid }) => (\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <FieldControl\r\n                                    name=\"jobTitle\"\r\n                                    render={({ handler, touched, hasError }) => (\r\n                                        <div className=\"col-md-12 form-group\">\r\n                                            <label for=\"\">Job Title</label>\r\n                                            <input\r\n                                                className=\"form-control rounded-0 border-top-0 border-right-0 border-left-0 px-0\"\r\n                                                type=\"text\"\r\n                                                {...handler()}\r\n                                            />\r\n                                            <span className=\"pro-error\" style={{ color: \"red\" }}>\r\n                                                {touched &&\r\n                                                    ((hasError(\"required\") && `Job title is required`))}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                                <FieldControl\r\n                                    name=\"jobLocation\"\r\n                                    render={({ handler, touched, hasError }) => (\r\n                                        <div className=\"col-md-12 form-group\">\r\n                                            <label for=\"\">Job Location</label>\r\n                                            <input\r\n                                                className=\"form-control rounded-0 border-top-0 border-right-0 border-left-0 px-0\"\r\n                                                type=\"text\"\r\n                                                {...handler()}\r\n                                            />\r\n                                            <span className=\"pro-error\" style={{ color: \"red\" }}>\r\n                                                {touched &&\r\n                                                    ((hasError(\"required\") && `Job location is required`))}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                                <FieldControl\r\n                                    name=\"jobDescription\"\r\n                                    render={({ handler, touched, hasError }) => (\r\n                                        <div className=\"col-md-12 form-group\">\r\n                                            <label for=\"\">Job Description</label>\r\n                                            <textarea className=\"form-control rounded-0 border-top-0 border-right-0 border-left-0 px-0\"\r\n                                                {...handler()}></textarea>\r\n                                            <span className=\"pro-error\" style={{ color: \"red\" }}>\r\n                                                {touched &&\r\n                                                    ((hasError(\"required\") && `Job description is required`))}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                                <FieldControl\r\n                                    name=\"date\"\r\n                                    render={({ handler, touched, hasError }) => (\r\n                                        <div className=\"col-md-12 form-group\">\r\n                                            <label for=\"\">Date</label>\r\n                                            <input\r\n                                                className=\"form-control rounded-0 border-top-0 border-right-0 border-left-0 px-0\"\r\n                                                type=\"date\"\r\n                                                {...handler()}\r\n                                            />\r\n                                            <span className=\"pro-error\" style={{ color: \"red\" }}>\r\n                                                {touched &&\r\n                                                    ((hasError(\"required\") && `Date is required`))}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                                <FieldControl\r\n                                    name=\"status\"\r\n                                    render={({ handler, touched, hasError }) => (\r\n                                        <div className=\"col-md-12 form-group\">\r\n                                            <label for=\"\">Job Status</label>\r\n                                            <select\r\n                                                className=\"form-control rounded-0 border-top-0 border-right-0 border-left-0 px-0\"\r\n                                                id=\"exampleFormControlSelect1\"\r\n                                                {...handler()}\r\n                                            >\r\n                                                <option value=\"\">Select an option</option>\r\n                                                <option value={1}>Traniee</option>\r\n                                                <option value={2}>Associate</option>\r\n                                                <option value={3}>Senior Associate</option>\r\n                                                <option value={3}>Manager Level 1</option>\r\n                                                <option value={4}>Senior Manager</option>\r\n                                            </select>\r\n                                            <span className=\"pro-error\" style={{ color: \"red\" }}>\r\n                                                {touched &&\r\n                                                    ((hasError(\"required\") && `Status is required`))}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                                <div className=\"col-md-6\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-success text-center\"\r\n                                        disabled={invalid}\r\n                                    >\r\n                                        update\r\n                     </button>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <NavLink to=\"/\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary float-right\"\r\n                                        >\r\n                                            Back\r\n                     </button>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        getPostDetails: state.post.getPostDetails,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditJob);\r\n","import axios from \"axios\";\r\nimport toastr from \"toastr\";\r\nimport {\r\n    GET_POST_LIST\r\n} from \"./action_constant/action_constant\";\r\nimport \"../../node_modules/toastr/build/toastr.css\";\r\nimport url from \"../config/config\";\r\n\r\nexport function getJobList(data) {\r\n    return {\r\n        type: GET_POST_LIST,\r\n        Payload: data\r\n    };\r\n}\r\n\r\nexport function getPostListing() {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/getPostList\")\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    dispatch(getJobList(res.data.data));\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function addJob(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/addJobPost\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    toastr.success(res.data.msg);\r\n                    history.push({ pathname: \"/\" });\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function editJobPost(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/updateJobData\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    toastr.success(res.data.msg);\r\n                    history.push({ pathname: \"/\" });\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function deleteJobList(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/deleteJobData\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    toastr.success(res.data.msg);\r\n                    dispatch(getJobList(res.data.data));\r\n                    return true\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function getJobDataToUpdate(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/getJobDataToUpdate\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    return res.data.data;\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n","module.exports = \"http://localhost:3586\";\r\n\r\n"],"sourceRoot":""}