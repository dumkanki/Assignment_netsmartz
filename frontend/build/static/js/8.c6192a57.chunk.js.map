{"version":3,"sources":["component/List_Job/listJob.js","action/action.js","config/config.js"],"names":["JobList","props","openModal","id","deleteId","setState","openDeleteModal","deleteJob","a","dispatch","deleteJobList","toggle","loading","className","addJob","history","push","pathname","state","this","getPostListing","getPostDetails","type","onClickCapture","map","data","index","formatDate","moment","date","format","jobTitle","jobLocation","jobDescription","status","to","_id","style","cursor","isOpen","color","onClick","undefined","Component","connect","ownProps","post","getJobList","GET_POST_LIST","Payload","axios","url","then","res","toastr","error","msg","catch","err","success","editJobPost","getJobDataToUpdate","module","exports"],"mappings":"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","file":"static/js/8.c6192a57.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n    getPostListing, deleteJobList\r\n} from \"../../action/action\";\r\n\r\nclass JobList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDeleteModal: false\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.dispatch(getPostListing())\r\n    }\r\n\r\n    openModal = (id) => {\r\n        this.deleteId = id;\r\n        this.setState({\r\n            openDeleteModal: true\r\n        });\r\n    }\r\n\r\n    deleteJob = async () => {\r\n        let data = await this.props.dispatch(deleteJobList(this.deleteId));\r\n        if (data) {\r\n            this.toggle();\r\n        }\r\n    }\r\n\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            openDeleteModal: false\r\n        });\r\n    }\r\n\r\n    loading = () => (\r\n        <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n    );\r\n\r\n    addJob = () => {\r\n        this.props.history.push({ pathname: \"/add-job\" });\r\n    }\r\n    render() {\r\n        const { getPostDetails } = this.props;\r\n        return (\r\n            <div>\r\n                <span><h2 className=\"text-center\">Job Listing</h2>\r\n                    <button type=\"button\" className=\"btn btn-primary float-right\" onClickCapture={this.addJob}>Add Job</button></span>\r\n                <section className=\"\">\r\n                    <div className=\"table-responsive-md\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                            <thead className=\"thead-theme\">\r\n                                <tr>\r\n                                    <th>S.No</th>\r\n                                    <th>Job Title</th>\r\n                                    <th>Job Location</th>\r\n                                    <th>Job Description</th>\r\n                                    <th>Date</th>\r\n                                    <th>Job status</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getPostDetails && getPostDetails.map((data, index) => {\r\n                                    let formatDate = moment(data.date).format('MMMM Do YYYY');\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>{index}</td>\r\n                                            <td>{data.jobTitle}</td>\r\n                                            <td>{data.jobLocation}</td>\r\n                                            <td>{data.jobDescription}</td>\r\n                                            <td>{formatDate}</td>\r\n                                            <td>{data.status}</td>\r\n                                            <td>\r\n                                                <NavLink to={`edit-job/${data._id}`}>\r\n                                                    <span style={{ cursor: \"pointer\" }}\r\n                                                        className=\"glyphicon glyphicon-pencil mr-2\"></span>\r\n                                                </NavLink>\r\n                                                <span style={{ cursor: \"pointer\" }} className=\"glyphicon glyphicon-trash\"\r\n                                                    onClickCapture={() => this.openModal(data._id)}>bmnbhjn</span>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n\r\n                        </table>\r\n                        <Modal isOpen={this.state.openDeleteModal} toggle={this.toggle} >\r\n                            <ModalHeader className=\"border-0\" toggle={this.toggle}>Delete Confirmation</ModalHeader>\r\n                            <ModalBody>\r\n                                <div>\r\n                                    <strong>Are you sure to delete this Job account?</strong>\r\n                                </div>\r\n\r\n                            </ModalBody>\r\n                            <ModalFooter className=\"border-0\">\r\n                                <Button color=\"primary\" onClick={this.deleteJob}>Delete</Button>\r\n                                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                    {getPostDetails === undefined || getPostDetails === [] &&\r\n                        <>\r\n                            <h5 className=\"text-center\">No records found</h5>\r\n                        </>\r\n                    }\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        getPostDetails: state.post.getPostDetails,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(JobList);","import axios from \"axios\";\r\nimport toastr from \"toastr\";\r\nimport {\r\n    GET_POST_LIST\r\n} from \"./action_constant/action_constant\";\r\nimport \"../../node_modules/toastr/build/toastr.css\";\r\nimport url from \"../config/config\";\r\n\r\nexport function getJobList(data) {\r\n    return {\r\n        type: GET_POST_LIST,\r\n        Payload: data\r\n    };\r\n}\r\n\r\nexport function getPostListing() {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/getPostList\")\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    dispatch(getJobList(res.data.data));\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function addJob(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/addJobPost\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    toastr.success(res.data.msg);\r\n                    history.push({ pathname: \"/\" });\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function editJobPost(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/updateJobData\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    toastr.success(res.data.msg);\r\n                    history.push({ pathname: \"/\" });\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function deleteJobList(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/deleteJobData\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    toastr.success(res.data.msg);\r\n                    dispatch(getJobList(res.data.data));\r\n                    return true\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n\r\nexport function getJobDataToUpdate(data, history) {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(url + \"/post/getJobDataToUpdate\", { data })\r\n            .then(res => {\r\n                if (res.data.status === 200) {\r\n                    return res.data.data;\r\n                } else {\r\n                    toastr.error(res.data.msg);\r\n                    return false\r\n                }\r\n            })\r\n            .catch(err => {\r\n                toastr.error(\"Something went wrong, Please try again\");\r\n            });\r\n    }\r\n}\r\n","module.exports = \"http://localhost:3586\";\r\n\r\n"],"sourceRoot":""}